<refentry id="aldabad-man">

    <refmeta>
        <refentrytitle>aldabad</refentrytitle>
        <manvolnum>8</manvolnum>
        <refmiscinfo class="source">Aldaba</refmiscinfo>
        <refmiscinfo class="manual">Aldaba Server Reference Guide</refmiscinfo>
    </refmeta>

    <refnamediv id="aldabad-man-name">
        <refname>aldabad</refname>
        <refpurpose>Single Packet Authorization and Port Knocking server</refpurpose>
    </refnamediv>

    <refsynopsisdiv id="aldabad-man-synopsis">
        <cmdsynopsis sepchar=" ">
            <command>aldabad</command>
            <arg choice="opt" rep="norepeat">
                <replaceable>Options</replaceable>
            </arg>
        </cmdsynopsis>
    </refsynopsisdiv>


    <refsect1 id="aldabad-man-description">
        <title>Description</title>
        <para>
            Aldaba is an open-source Port Knocking and Single Packet Authorization
            system. This document describes the latest version of Aldaba Server,
            part of the Aldaba Suite, available from
            <ulink url="http://www.aldabaknocking.com"/>
        </para>
    </refsect1>


    <refsect1 id="aldaba-mand-briefoptions">
        <title>Options Summary</title>

        <para>
            The following option summary is the output of Aldaba Server when run
            with no arguments. It's a quick cheatsheet that lists the most common options.
        </para>

        <screen><xi:include href="aldabad-usage.txt" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" /></screen>


    </refsect1>


    <refsect1 id="aldabad-man-modes-operation">
        <title>Modes of Operation</title>

        <para>
        </para>

        <variablelist>

            <varlistentry>
                <term>
                    <option>--spa</option> (Single Packet Authorization Mode)
                </term>
                <listitem>
                    <para>
                        This option tells Aldaba Server to run in SPA mode. 
                        Single Packet Authorization is the technique that allows
                        users request access to a given port number on the server,
                        using a single authentication message. That message,
                        called the SPA authentication message, is transmitted
                        to the server in a single UDP datagram.
                        This technique provides strong authentication and
                        is the default operation mode in Aldaba.
                    </para>
                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <option>--pk</option> (Port Knocking Mode)
                </term>
                <listitem>
                    <para>
                        This option tells Aldaba Server to run in PK mode.
                        Like SPA, Port Knocking lets users request access to a
                        given port. However, the authentication message is
                        transmitted stealthily, dividing it, and encoding each
                        part in the headers of a TCP SYN packet. Port Knocking
                        authentications are more difficult to detect from an
                        attacker's point of view. However, the security provided
                        by this technique is often weaker than in SPA.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>

    </refsect1>


     <!-- SINGLE PACKET AUTHORIZATION ************************************** -->
    <refsect1 id="aldabad-man-spa">
        <title>Single Packet Authorization</title>

        <para>
        </para>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-t <replaceable>port</replaceable></option>,
                    <option>--target-port <replaceable>port</replaceable></option> (Set target port number)
                </term>
                <listitem>
                    <para>
                        This option specifies the destination port number that 
                        incoming SPA messages are expected to be directed to.
                        If no port is supplied, Aldaba will pick one automatically,
                        based on the supplied passphrase.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


    <!-- PORT KNOCKING ***************************************************** -->
    <refsect1 id="aldabad-man-pk">
        <title>Port Knocking</title>

        <para>
        </para>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-t <replaceable>ports</replaceable></option>,
                    <option>--target-ports <replaceable>ports</replaceable></option> (Set knock sequence)
                </term>
                <listitem>
                    <para>
                        List of expected knocks. These should be the same
                        ports used by Aldaba Client. The list
                        should be comma separated and have no spaces in it
                        (eg: -t 1337,2600,8086,6800). Also, ports must be unique.
                        The number of ports needed depends on the type of
                        authentication and the header field that is used to
                        create the covert channel. If you don't supply the
                        correct number of ports Aldaba will tell you how many
                        is expecting.
                    </para>
                    <para>
                        Note that this parameter is completely optional and
                        may safely be omitted. When not supplied, the sequence
                        of ports is generated automatically, deriving it from
                        the supplied passphrase. A give passphrase will always
                        produce the same port sequence, in both client and
                        server.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>-f <replaceable>id</replaceable></option>,
                    <option>--field <replaceable>id</replaceable></option> (Set covert channel header field)
                </term>
                <listitem>
                    <para>
                        This option specifies the protocol header field used by 
                        the client to encode the PK authentication message. 
                        Currently the following fields are available:
                    </para>

                    <para>
                        <variablelist>
                            <varlistentry>
                                <term>ip-tos</term>
                                <para>IPv4 Type of Service. (8 bits).</para>
                            </varlistentry>
                            <varlistentry>
                                <term>ip-id</term>
                                <para>IPv4 Identification. (16 bits).</para>
                            </varlistentry>
                            <varlistentry>
                                <term>tcp-ack</term>
                                <para>TCP Acknowledgement Number (32 bits)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>tcp-seq (Default)</term> 
                                <para>TCP Sequence Number (32 bits)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>tcp-sport</term>
                                <para>TCP Source Port (16 bits)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>tcp-win</term>
                                <para>TCP Window Size (16 bits)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>tcp-urp</term>
                                <para>TCP Urgent Pointer (16 bits)</para>
                            </varlistentry>
                        </variablelist>
                    </para>

                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>-A <replaceable>type</replaceable></option>,
                    <option>--auth <replaceable>type</replaceable></option> (Set authentication strength)
                </term>
                <listitem>
                    <para>
                        This option specifies the strength and security of the
                        authentication. Currently there are two different
                        possibilities: 
                    </para>
                    <para>
                        <variablelist>
                            <varlistentry>
                                <term>light (Default)</term>
                                <para>
                                    Light authentication provides basic,
                                    but fast and effective client authentication.
                                    It requires very few packets to be sent to
                                    the server, minimizing the risk of packet
                                    loss and providing a good response time.
                                    However, although the the security of this
                                    authentication may be enough for some cases,
                                    it can be broken by skilled attackers. Systems
                                    that require high levels of security should
                                    use the strong authentication discussed below.
                                    </para>
                            </varlistentry>
                            <varlistentry>
                                <term>strong</term>
                                <para>
                                    Strong authentication provides a much more
                                    secure and robust client authentication. It
                                    requires the transmission of a higher number
                                    of packets, which increases the risk of
                                    packet loss, but provides effective protection
                                    against replay attacks, and significantly
                                    reduces the risk of poisoning attacks. Systems
                                    that require high levels of security should use
                                    this type of authentication.
                                </para>
                            </varlistentry>
                        </variablelist>
                    </para>

                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


    <!-- CRYPTOGRAPHY OPTIONS ************************************************ -->
    <refsect1 id="aldabad-man-cryptography">
        <title>Cryptography Options</title>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-P <replaceable>string</replaceable></option>,
                    <option>--passphase <replaceable>string</replaceable></option>  (Set passphrase)
                </term>
                <listitem>
                    <para>
                        Passphrase to be used to generate the necessary 
                        cryptographic keys (one for message authentication and
                        one for message encryption).
                        It must be at least 8 characters long and have a maximum
                        of 256 characters. If it contains spaces, it should be 
                        enclosed in double quotes (e.g: -k "Use this to encrypt
                        it all"). Special characters should be escaped using a 
                        backslash. Passphrases longer than 256 characters are
                        valid but will be truncated. Cryptographic keys are
                        derived from this passphrase using the PBKDF2 algorithm.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><option>-c</option>,
                    <option>--cipher</option> (Set encryption algorithm)
                </term>
                <listitem>
                    <para>
                        Algorithm to be used to encrypt authentication data.
                        Currently the following algorithms are supported:
                        <variablelist>
                            <varlistentry>
                                <term>Blowfish</term> 
                                <para>Symmetric ; 64-bit block size  ; Very Fast.</para>
                            </varlistentry>
                            <varlistentry>
                                <term>Rijndael</term>
                                <para>Symmetric ; 128-bit block size ; Fast ; AES Standard.  (DEFAULT)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>Serpent</term>
                                <para>Symmetric ; 128-bit block size ; Medium ; AES Contest finalist (2nd position)</para>
                            </varlistentry>
                            <varlistentry>
                                <term>Twofish</term>
                                <para>Symmetric 128-bit block size ; Fast ; AES Contest finalist (3rd position)</para>
                            </varlistentry>
                        </variablelist>

                        All algorithms use 256-bit keys. Note that Port Knocking
                        mode with Light authentication MUST it Blowfish because
                        it requires a block size of 64 bits.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


    <!-- NETWORKING OPTIONS ************************************************ -->
    <refsect1 id="aldabad-man-networking">
        <title>Networking Options</title>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-i <replaceable>name</replaceable></option>,
                    <option>--interface <replaceable>name</replaceable></option>  (Set network interface)
                </term>
                <listitem>
                    <para>
                         This option sets the network interface that should be used
                         to capture incoming packets. Any network interface
                         supported by libpcap can be used. If no interface is
                         specified Aldaba Server will try to use the most
                         suitable one.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>--promiscuous </option>  (Set promiscuous mode)
                </term>
                <listitem>
                    <para>
                         Puts the network card into promiscuous mode. By default
                         the network interface is left in non-promiscuous mode, 
                         unless it was already in promiscuous mode.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>

    <!-- OUTPUT OPTIONS **************************************** -->
    <refsect1 id="aldabad-man-output-options">
        <title>Output Options</title>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-v<optional><replaceable>level</replaceable></optional></option>,
                    <option>--verbose <optional><replaceable>level</replaceable></optional></option> (Increase or set verbosity level)
                </term>
                <listitem>
                    <para>
                        Increases the verbosity level, causing Aldaba to print more
                        information during its execution. There are 9 levels of verbosity
                        (0 to 8). Every instance of <option>-v</option> increments the verbosity level by one
                        (from its default value, level 4). Every instance of option <option>-q</option>
                        decrements the verbosity level by one. Alternatively you can specify
                        the level directly, as in <option>-v3</option> or
                        <option>-v-1</option>. These are the available levels:
                    </para>

                    <para>
                        <variablelist>
                            <varlistentry>
                                <term>Level 0</term>
                                <para> No output at all.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 1</term>
                                <para> Parsing Error messages.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 2</term>
                                <para> Fatal error messages. (Default).</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 3</term>
                                <para> Warnings.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 4</term>
                                <para> Information about knocking attempts.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 5</term>
                                <para> Information about current configuration.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 6</term>
                                <para> Important debug information.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 7</term>
                                <para> Any debug information.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 8</term>
                                <para> Reserved for future use.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 9</term>
                                <para> Reserved for future use.</para>
                            </varlistentry>
                        </variablelist>
                    </para>

                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <option>-q<optional><replaceable>level</replaceable></optional></option>,
                    <option>--reduce-verbosity <optional><replaceable>level</replaceable></optional></option> (Decrease verbosity level)
                </term>
                <listitem>
                    <para>
                        Decreases the verbosity level, causing Aldaba to print less
                        information during its execution.
                    </para>

                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <option>-l<optional><replaceable>level</replaceable></optional></option>,
                    <option>--logging <optional><replaceable>level</replaceable></optional></option> (Set logging level)
                </term>
                <listitem>
                    <para>
                        Controls the level of logging. Logs are sent via syslog.
                        Entries use the prefix "aldabad" and the current PID of
                        the process. There are 10 different levels (0 to 9).
                        Higher levels include all lower levels.
                    </para>

                    <para>
                        <variablelist>
                            <varlistentry>
                                <term>Level 0</term>
                                <para> No logging at all.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 1</term>
                                <para> Failed authentication attempts.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 2</term>
                                <para> Successful authentication attempts.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 3</term>
                                <para> Fatal error messages. (Default).</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 4</term>
                                <para>  Warnings.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 5</term>
                                <para> Information about current configuration .</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 6</term>
                                <para> Important debug information.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 7</term>
                                <para> Any debug information.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 8</term>
                                <para> Reserved for future use.</para>
                            </varlistentry>

                            <varlistentry>
                                <term>Level 9</term>
                                <para> Reserved for future use.</para>
                            </varlistentry>
                        </variablelist>
                    </para>

                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <option>--debug </option>  (Debug)
                </term>
                <listitem>
                    <para>
                         Automatically sets maximum verbosity level and disables
                         daemon mode.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>--quiet </option>  (Quiet)
                </term>
                <listitem>
                    <para>
                         Automatically sets verbose and logging levels to 0.
                         No output or logs will be generated.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


    <!-- MISCELLANEOUS OPTIONS ************************************************ -->
    <refsect1 id="aldabad-man-misc">
        <title>Miscellaneous Options</title>

        <variablelist>

            <varlistentry>
                <term>
                    <option>-C <replaceable>path</replaceable></option>,
                    <option>--config <replaceable>path</replaceable></option> (Read configuration from file)
                </term>
                <listitem>
                    <para>
                         Tells Aldaba server to read configuration from a specific
                         configuration file. Supplied path may be absolute or
                         relative to the current directory. Alternatively, it
                         is possible to run the server simply like "aldabad <option>start</option>",
                         what makes it read the default configuration file (typically
                         stored in /etc/aldabad/conf/aldabad.conf or
                         /usr/local/etc/aldabad/conf/aldabad.conf)
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>-I </option>,
                    <option>--interactive </option>  (Interactive mode)
                </term>
                <listitem>
                    <para>
                         Forces Aldaba Server to run interactively instead of in
                         daemon mode. By default it runs as a system daemon.
                    </para>
                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <option>-V</option>,
                    <option>--version</option>  (Display Version)
                </term>
                <listitem>
                    <para>
                        Displays current version and quits.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <option>-h</option>,
                    <option>--help</option>  (Display Help)
                </term>
                <listitem>
                    <para>
                        Displays help information and quits.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


    <refsect1 id="aldabad-man-bugs">
        <title>Bugs</title>

        <para>
            Please, report any bugs you find through the Aldaba development
            mailing list or directly to aldabaknocking@gmail.com.
            Please try to include as much information as possible. In general
            it's a good idea to include the output of the command "uname -a",
            the version of Aldaba you are using and a brief description of the
            topology of the network you are using Aldaba from (subnets, routers,
            firewalls, etc).

            See <ulink url="http://http://www.aldabaknocking.com/development"/>
            for more details.
        </para>
    </refsect1>


    <refsect1 id="aldabad-man-author">
        <title>Authors</title>
        <para>
            Luis MartinGarcia <email>luis.mgarc@gmail.com</email> (<ulink url="http://www.aldabaknocking.com" />)
        </para>
    </refsect1>

</refentry>
